// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  firstName    String
  lastName     String
  password     String
  address      String?
  phone        Int?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  products     Product[]
  transactions Transaction[]

  @@map("users")
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]

  @@map("categories")
}

model RentType {
  id        Int       @id @default(autoincrement())
  label     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]

  @@map("rentypes")
}

model Product {
  id           Int           @id @default(autoincrement())
  title        String
  price        Float
  rent         Float
  description  String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  rentId       Int
  categories   Category[]
  createdBy    Int
  transactions Transaction[]
  user         User          @relation(fields: [createdBy], references: [id])
  rentType     RentType      @relation(fields: [rentId], references: [id])

  @@map("products")
}

model Transaction {
  id        Int             @id @default(autoincrement())
  type      TransactionType
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  productId Int
  fromDate  DateTime?
  toDate    DateTime?
  userId    Int
  product   Product         @relation(fields: [productId], references: [id])

  user User @relation(fields: [userId], references: [id])

  @@map("transactions")
}

enum TransactionType {
  Bought
  Sold
  Lend
  Borrowed
}
